{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/neko/99.etc/webapp-template/front/lib/with-mobx-store.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { initializeStore } from '../stores';\nvar isServer = false;\nvar __NEXT_MOBX_STORE__ = '__NEXT_MOBX_STORE__';\n\nfunction getOrCreateStore(initialState) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (isServer) {\n    return initializeStore(initialState);\n  } // Create store if unavailable on the client and set it on the window object\n\n\n  if (!window[__NEXT_MOBX_STORE__]) {\n    window[__NEXT_MOBX_STORE__] = initializeStore(initialState);\n  }\n\n  return window[__NEXT_MOBX_STORE__];\n}\n\nexport default (function (App) {\n  return (\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inherits(AppWithMobx, _React$Component);\n\n      _createClass(AppWithMobx, null, [{\n        key: \"getInitialProps\",\n        value: function () {\n          var _getInitialProps = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee(appContext) {\n            var mobxStore, appProps;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    // Get or Create the store with `undefined` as initialState\n                    // This allows you to set a custom default initialState\n                    mobxStore = getOrCreateStore(); // Provide the store to getInitialProps of pages\n\n                    appContext.ctx.mobxStore = mobxStore;\n                    appProps = {};\n\n                    if (!(typeof App.getInitialProps === 'function')) {\n                      _context.next = 7;\n                      break;\n                    }\n\n                    _context.next = 6;\n                    return App.getInitialProps.call(App, appContext);\n\n                  case 6:\n                    appProps = _context.sent;\n\n                  case 7:\n                    return _context.abrupt(\"return\", _objectSpread({}, appProps, {\n                      initialMobxState: mobxStore\n                    }));\n\n                  case 8:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          function getInitialProps(_x) {\n            return _getInitialProps.apply(this, arguments);\n          }\n\n          return getInitialProps;\n        }()\n      }]);\n\n      function AppWithMobx(props) {\n        var _this;\n\n        _classCallCheck(this, AppWithMobx);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AppWithMobx).call(this, props));\n        _this.mobxStore = getOrCreateStore(props.initialMobxState);\n        return _this;\n      }\n\n      _createClass(AppWithMobx, [{\n        key: \"render\",\n        value: function render() {\n          return __jsx(App, _extends({}, this.props, {\n            mobxStore: this.mobxStore,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }));\n        }\n      }]);\n\n      return AppWithMobx;\n    }(React.Component)\n  );\n});","map":{"version":3,"sources":["/Users/neko/99.etc/webapp-template/front/lib/with-mobx-store.js"],"names":["React","initializeStore","isServer","__NEXT_MOBX_STORE__","getOrCreateStore","initialState","window","App","appContext","mobxStore","ctx","appProps","getInitialProps","call","initialMobxState","props","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,WAAhC;AAEA,IAAMC,QAAQ,QAAd;AACA,IAAMC,mBAAmB,GAAG,qBAA5B;;AAEA,SAASC,gBAAT,CAA0BC,YAA1B,EAAwC;AACtC;AACA,MAAIH,QAAJ,EAAc;AACZ,WAAOD,eAAe,CAACI,YAAD,CAAtB;AACD,GAJqC,CAMtC;;;AACA,MAAI,CAACC,MAAM,CAACH,mBAAD,CAAX,EAAkC;AAChCG,IAAAA,MAAM,CAACH,mBAAD,CAAN,GAA8BF,eAAe,CAACI,YAAD,CAA7C;AACD;;AACD,SAAOC,MAAM,CAACH,mBAAD,CAAb;AACD;;AAED,gBAAe,UAACI,GAAD,EAAS;AACtB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDACgCC,UADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI;AACA;AACMC,oBAAAA,SAJV,GAIsBL,gBAAgB,EAJtC,EAMI;;AACAI,oBAAAA,UAAU,CAACE,GAAX,CAAeD,SAAf,GAA2BA,SAA3B;AAEIE,oBAAAA,QATR,GASmB,EATnB;;AAAA,0BAUQ,OAAOJ,GAAG,CAACK,eAAX,KAA+B,UAVvC;AAAA;AAAA;AAAA;;AAAA;AAAA,2BAWuBL,GAAG,CAACK,eAAJ,CAAoBC,IAApB,CAAyBN,GAAzB,EAA8BC,UAA9B,CAXvB;;AAAA;AAWMG,oBAAAA,QAXN;;AAAA;AAAA,uEAeSA,QAfT;AAgBMG,sBAAAA,gBAAgB,EAAEL;AAhBxB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAoBE,2BAAYM,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,yFAAMA,KAAN;AACA,cAAKN,SAAL,GAAiBL,gBAAgB,CAACW,KAAK,CAACD,gBAAP,CAAjC;AAFiB;AAGlB;;AAvBH;AAAA;AAAA,iCAyBW;AACP,iBACE,MAAC,GAAD,eAAS,KAAKC,KAAd;AAAqB,YAAA,SAAS,EAAE,KAAKN,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAGD;AA7BH;;AAAA;AAAA,MAAiCT,KAAK,CAACgB,SAAvC;AAAA;AA+BD,CAhCD","sourcesContent":["import React from 'react';\nimport { initializeStore } from '../stores';\n\nconst isServer = typeof window === 'undefined'\nconst __NEXT_MOBX_STORE__ = '__NEXT_MOBX_STORE__'\n\nfunction getOrCreateStore(initialState) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (isServer) {\n    return initializeStore(initialState)\n  }\n\n  // Create store if unavailable on the client and set it on the window object\n  if (!window[__NEXT_MOBX_STORE__]) {\n    window[__NEXT_MOBX_STORE__] = initializeStore(initialState)\n  }\n  return window[__NEXT_MOBX_STORE__]\n}\n\nexport default (App) => {\n  return class AppWithMobx extends React.Component {\n    static async getInitialProps (appContext) {\n      // Get or Create the store with `undefined` as initialState\n      // This allows you to set a custom default initialState\n      const mobxStore = getOrCreateStore()\n\n      // Provide the store to getInitialProps of pages\n      appContext.ctx.mobxStore = mobxStore\n\n      let appProps = {}\n      if (typeof App.getInitialProps === 'function') {\n        appProps = await App.getInitialProps.call(App, appContext)\n      }\n\n      return {\n        ...appProps,\n        initialMobxState: mobxStore\n      }\n    }\n\n    constructor(props) {\n      super(props)\n      this.mobxStore = getOrCreateStore(props.initialMobxState)\n    }\n\n    render() {\n      return (\n        <App {...this.props} mobxStore={this.mobxStore} />\n      )\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}