{"ast":null,"code":"import MainStore from \"./mainStore\";\nlet store = null;\n\nconst Stores = () => {\n  return {\n    main: MainStore\n  };\n};\n\nexport function initializeStore(isServer) {\n  if (isServer) {\n    return Stores();\n  } else {\n    if (store === null) {\n      store = Stores();\n    }\n\n    return store;\n  }\n}","map":{"version":3,"sources":["/Users/neko/99.etc/webapp-template/front/stores/index.ts"],"names":["MainStore","store","Stores","main","initializeStore","isServer"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,SAAO;AACLC,IAAAA,IAAI,EAAEH;AADD,GAAP;AAGD,CAJD;;AAOA,OAAO,SAASI,eAAT,CAA0BC,QAA1B,EAAoC;AACzC,MAAIA,QAAJ,EAAc;AACZ,WAAOH,MAAM,EAAb;AACD,GAFD,MAEO;AACL,QAAID,KAAK,KAAK,IAAd,EAAoB;AAClBA,MAAAA,KAAK,GAAGC,MAAM,EAAd;AACD;;AACD,WAAOD,KAAP;AACD;AACF","sourcesContent":["import MainStore from \"./mainStore\";\n\nlet store = null;\n\nconst Stores = () => {\n  return {\n    main: MainStore,\n  };\n};\nexport type storesType = typeof Stores;\n\nexport function initializeStore (isServer) {\n  if (isServer) {\n    return Stores();\n  } else {\n    if (store === null) {\n      store = Stores();\n    }\n    return store;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}